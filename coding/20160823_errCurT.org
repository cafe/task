#+TITLE: =errCurT()= Code analysis

* =generalClo()=
Following 2014 paper, all the parameters are set to be 

#+BEGIN_EXAMPLE
u=6.0, sigma=1.0, kappa0=0.0, theta0=0.0, x0=0.0, y0=0.0, filename="LUT_sameSeg.h5"
#+END_EXAMPLE

If we execute the function

#+BEGIN_SRC julia
generalClo(u=6.0, sigma=1.0, kappa0=0.0, theta0=0.0, x0=0.0, y0=0.0, filename="LUT_sameSeg.h5")
#+END_SRC

and get the intermediate results:

| Varialbe | Value |
|----------+-------|
|   s_{0}  | 0.0   |
|   s_{u}  | 6.0   |
|   u_{s}  | 0.0   |
|   u_{e}  | 6.0   |
|   l_{s}  |  1    |
|   l_{e}  | *31*  |
|   t_{s}  |  0.0  |
|   t_{e}  | *0.0* |

#+BEGIN_SRC julia
utotal = [0.0, 0.2, 0.4, ..., 6.0] # 31-element array
le = count((x)->x <= ue, utotal)
#+END_SRC

The problem is the l_{e} value shown above. Theoretically it should be =30= (=6.0= falls on the 30th segment) instead of =31=, so t_{e} should be =1.0= instead of =0.0=. Since u_{e} is =6.0=, which is accidentally the 31th element of =utotal=.

Thus we change the code accordingly:

#+BEGIN_SRC julia
ls = count((x)->x <= us, utotal)
le = count((x)->x < ue, utotal)
#+END_SRC

and now we get =30=. 

Also updated =tParaNew()= to make sure all the =s_arc= values fall on =[0.0, 1.0]=. Note that sometimes the numerical computation will give results like =0.20000000000000018= or =-0.00000000000000018=, which actually should be =0.2= or =0.0=. So we need to handle such situations in =tParaNew()= to make sure that t_{e} is =1.0=:

#+BEGIN_SRC julia
if s_arc<=0.0 # in case some values like -0.00000000000000018
    return 0.0
elseif s_arc>=L # in case some values like 0.20000000000000018
    return 1.0
end
#+END_SRC

* =errCurT()=
=L_array= stores all the arc length values of each segment and all the values should be the /same/. According to the 2014 paper, the intermediate evaluation shows that it's a 30-element array =[0.2, 0.2, ..., 0.2]=.

| Varialbe | Value |
|----------+-------|
|    num   |  30   |
|  num_sub |  10   |
|     u    |  6.0  |

- =num=: number of segments (=30= by default, based on the lookup table)
- =num_sub=: number of subsegments (=10= by default, can be changed to a larger value and mainly for plotting purpose)
- =tSample= is a 2D array. Dimension: =num= x =(sub+1)= (30x11)
- =sSample= is a 1D array and needs to be modified to hold =num= x =(sub+1)= (30x11=330) elements, which is similar to =tSample=.

* Result
=uniArcLengthOne()= is called by =errCurT()= and the accuracy in =uniArcLengthOne()= is set to be =1.0e-12= for the following results, i.e., 

#+BEGIN_SRC julia
while maximum(abs(s-st)) > 1.0e-12
    ...
end
#+END_SRC



